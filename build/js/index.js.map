{"version":3,"sources":["script.js"],"names":["getData","fetch","then","response","json","data","console","log","catch","error","active","document","querySelector","style","color","timeFramesActive","value","iterator","time","innerText","toLowerCase","classList","remove","createTemplate","ev","valueButton","target","res","forEach","item","workClass","querySelectorAll","plantillaHours","plantillaLasthours","plantillaLast","elem","dataName","dataset","name","jsonName","title","timeframes","daily","current","previous","weekly","monthly","innerHTML","getButton","addEventListener"],"mappings":"AACA,MAAMA,QAAUC,MAAM,aACjBC,MAAMC,GAAYA,EAASC,SAC3BF,MAAMG,IACHC,QAAQC,IAAIF,GACLA,KAEdG,OAAOC,GAASH,QAAQC,IAAIE,KAEvBC,OAASC,SAASC,cAAc,WACtCF,OAAOG,MAAMC,MAAQ,UAErB,MAAMC,iBAAoBC,IAEtB,IAAK,MAAMC,KAAYC,KAEfF,GAASC,EAASE,UAAUC,cAC5BH,EAASJ,MAAMC,MAAQ,WAIvBG,EAASJ,MAAMC,MAAQ,UACvBJ,OAAOW,UAAUC,OAAO,UAEhC,EAKEC,eAAkBC,IAGpB,IAAIC,EAAcD,EAAGE,OAAOP,UAAUC,cAItCL,iBAAiBU,GAGjBzB,QAAQE,MAAMyB,IACVA,EAAIC,SAASC,IACT,MAAMC,EAAYnB,SAASoB,iBAAiB,oBAE5C,IAAIC,EACAC,EACAC,EAEJ,IAAI,IAAIC,KAAQL,EAAW,CAEvB,IAAIM,EAAWD,EAAKE,QAAQC,KACxBC,EAAWV,EAAKW,MAIpB,OAAQf,GACJ,IAAK,QAEDO,EAAiBH,EAAKY,WAAWC,MAAMC,QACvCV,EAAqBJ,EAAKY,WAAWC,MAAME,SAC3CV,EAAgB,WAEhB,MAEJ,IAAK,SACDF,EAAiBH,EAAKY,WAAWI,OAAOF,QACxCV,EAAqBJ,EAAKY,WAAWI,OAAOD,SAC5CV,EAAgB,YAEhB,MAEJ,IAAK,UACDF,EAAiBH,EAAKY,WAAWK,QAAQH,QACzCV,EAAqBJ,EAAKY,WAAWK,QAAQF,SAC7CV,EAAgB,aAChB,MAEJ,QACI,OAMLE,GAAYG,IAEXJ,EAAKY,UAAY,qEAEOf,uDACDE,OAAmBD,oCAKlD,IACH,GACJ,EAOCe,UAAY,KACArC,SAASoB,iBAAiB,SAElCH,SAASV,IAEXA,EAAK+B,iBAAiB,QAAS1B,eAAe,GAEjD,EANaZ,SAASoB,iBAAiB,SAElCH,SAASV,IAEXA,EAAK+B,iBAAiB,QAAS1B,eAAe","file":"index.js","sourcesContent":["\r\nconst getData = fetch('data.json')\r\n    .then( response => response.json() )\r\n    .then( data => {\r\n        console.log(data)\r\n        return data;\r\n    })\r\n.catch( error => console.log(error))\r\n\r\nconst active = document.querySelector('.active');\r\nactive.style.color = '#bdc1ff'\r\n\r\nconst timeFramesActive = (value) => {\r\n\r\n    for (const iterator of time) {\r\n\r\n        if( value == iterator.innerText.toLowerCase() ) {\r\n            iterator.style.color = '#bdc1ff'\r\n            \r\n\r\n        } else {\r\n            iterator.style.color = '#6f76c8'\r\n            active.classList.remove('active')\r\n        }\r\n    }\r\n}\r\n// timeFramesActive()\r\n\r\n\r\nconst createTemplate = (ev) => {\r\n\r\n    // ? Valor del botón\r\n    let valueButton = ev.target.innerText.toLowerCase();\r\n\r\n\r\n    // ? Función para agregar un color al timeFrames activo\r\n    timeFramesActive(valueButton)\r\n\r\n    \r\n    getData.then( res => {\r\n        res.forEach( item => {\r\n            const workClass = document.querySelectorAll('#container__work');\r\n\r\n            let plantillaHours;\r\n            let plantillaLasthours;\r\n            let plantillaLast;\r\n\r\n            for(let elem of workClass) {\r\n                \r\n                let dataName = elem.dataset.name;\r\n                let jsonName = item.title;\r\n                \r\n                \r\n\r\n                switch (valueButton) {\r\n                    case 'daily':\r\n                        \r\n                        plantillaHours = item.timeframes.daily.current;\r\n                        plantillaLasthours = item.timeframes.daily.previous;\r\n                        plantillaLast = 'Last Day'\r\n\r\n                        break;\r\n                \r\n                    case 'weekly':\r\n                        plantillaHours = item.timeframes.weekly.current;\r\n                        plantillaLasthours = item.timeframes.weekly.previous;\r\n                        plantillaLast = 'Last Week'\r\n\r\n                        break;\r\n            \r\n                    case 'monthly':\r\n                        plantillaHours = item.timeframes.monthly.current;\r\n                        plantillaLasthours = item.timeframes.monthly.previous;\r\n                        plantillaLast = 'Last Month'\r\n                        break;\r\n                \r\n                    default:\r\n                        return;\r\n                }\r\n\r\n\r\n                \r\n\r\n                if(dataName == jsonName) {\r\n                    \r\n                    elem.innerHTML = `\r\n                    \r\n                        <h2 class=\"hours\">${plantillaHours}hrs</h2>\r\n                        <h3 class=\"last\">${plantillaLast} - ${plantillaLasthours}hrs</h3>\r\n\r\n                    `;\r\n                }\r\n                \r\n            }\r\n        })\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst getButton = () => {\r\n    const times = document.querySelectorAll('#time');\r\n    \r\n    times.forEach( time => {\r\n\r\n        time.addEventListener('click', createTemplate);\r\n\r\n    })\r\n}\r\ngetButton()"]}